/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zavierdev.crudsiswa.ui.home;

import com.zavierdev.crudsiswa.auth.Session;
import com.zavierdev.crudsiswa.viewmodel.ViewModelConnectionObserver;
import com.zavierdev.crudsiswa.model.Student;
import com.zavierdev.crudsiswa.utils.DialogBox;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tech
 */
public class HomeFrame extends javax.swing.JFrame {
    private HomeFrameViewModel mainFrameViewModel = null;
    private Session loginSession;
    private boolean firstRun = true;
    private Student selectedStudent = new Student();
    private boolean stateEdit = false;   
    
    /**
     * Creates new form MainFrame
     * @param loginSession
     */
    public HomeFrame(Session loginSession) {
        this.loginSession = loginSession;
        this.setVisible(true);
        provideViewModel();
        initComponents();
        initShellActions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPanelStudentTable = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        lblName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        scrollPanelTextAreaAddress = new javax.swing.JScrollPane();
        taAddress = new javax.swing.JTextArea();
        btnAddEdit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        lblLogedUser = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        aboutMenu = new javax.swing.JMenu();
        menuItemInfo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Siswa");
        setResizable(false);

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nama", "Alamat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPanelStudentTable.setViewportView(tblStudent);
        if (tblStudent.getColumnModel().getColumnCount() > 0) {
            tblStudent.getColumnModel().getColumn(2).setResizable(false);
        }

        lblName.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblName.setLabelFor(tfName);
        lblName.setText("Nama");
        lblName.setToolTipText("");

        lblAddress.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblAddress.setLabelFor(tfName);
        lblAddress.setText("Alamat");
        lblAddress.setToolTipText("");

        taAddress.setColumns(20);
        taAddress.setRows(5);
        scrollPanelTextAreaAddress.setViewportView(taAddress);

        btnAddEdit.setText("Tambah");
        btnAddEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEditActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnDelete.setText("Hapus");
        btnDelete.setActionCommand("");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblSearch.setLabelFor(tfSearch);
        lblSearch.setText("Search");

        lblLogedUser.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblLogedUser.setText("Logged User :");

        lblUsername.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        lblUsername.setText("-");

        aboutMenu.setText("About");

        menuItemInfo.setText("Info");
        menuItemInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemInfoActionPerformed(evt);
            }
        });
        aboutMenu.add(menuItemInfo);

        menuBar.add(aboutMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblLogedUser)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAddress)
                            .addComponent(scrollPanelTextAreaAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                            .addComponent(btnAddEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSearch))
                    .addComponent(scrollPanelStudentTable, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername)
                    .addComponent(lblLogedUser))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPanelTextAreaAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnAddEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addGap(7, 7, 7)
                        .addComponent(btnReset))
                    .addComponent(scrollPanelStudentTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );

        lblLogedUser.getAccessibleContext().setAccessibleName("");

        setSize(new java.awt.Dimension(638, 396));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        firstState();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(selectedStudent.id != null && !selectedStudent.id.isEmpty()) {
            int response = DialogBox.showOptionDialog(
                            "Anda yakin ?", 
                            "Data siswa ini akan dihapus !",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE);
            
            if(response == JOptionPane.YES_OPTION) {
                mainFrameViewModel.deleteStudent(selectedStudent);
                firstState();
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEditActionPerformed
        boolean isFormError = validateStudentFormError();
        Student student = new Student();
        student.setName(tfName.getText());
        student.setAddress(taAddress.getText());
        
        if(!stateEdit && !isFormError) { // State Add
            mainFrameViewModel.addStudent(student);
            firstState();
        } else if(!isFormError) { // State Update
            student.setId(selectedStudent.id);
            mainFrameViewModel.updateStudent(student);
            firstState();
        }
    }//GEN-LAST:event_btnAddEditActionPerformed

    private void menuItemInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemInfoActionPerformed
        DialogBox.showMessageDialog("This Application Developed By :\n"+"Zavier Ferodova Al Fitroh");
    }//GEN-LAST:event_menuItemInfoActionPerformed
    
    private void provideViewModel() {
        mainFrameViewModel = new HomeFrameViewModel();
    }
    
    private void initShellActions() {
        tblStudent.getSelectionModel().addListSelectionListener((ListSelectionEvent lse) -> {
            if(tblStudent.getSelectedRow() > -1) {
                String id = tblStudent.getValueAt(tblStudent.getSelectedRow(), 0).toString();
                String name = tblStudent.getValueAt(tblStudent.getSelectedRow(), 1).toString();
                String address = tblStudent.getValueAt(tblStudent.getSelectedRow(), 2).toString();
            
                selectedStudent.setId(id);
                selectedStudent.setName(name);
                selectedStudent.setAddress(address);
            
                fillStudentForm(selectedStudent);
                stateEdit();
            }
        });
        
        tfSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
               performSearchStudent();
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
               performSearchStudent(); 
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
               performSearchStudent(); 
            }
        });
        
        mainFrameViewModel.observeConnection(new ViewModelConnectionObserver() {
            @Override
            public void connectionStatus(boolean status) {
                if(!status) {
                    showDatabaseErrorDialog();
                } else if(status && firstRun) { // First application run
                    runShell();
                    firstRun = false;
                }
            }
        });
    }
    
    private void runShell() {
        getAndFillStudentTable();    
        lblUsername.setText(loginSession.getUsername());
    }
    
    private void firstState() {
        tblStudent.clearSelection(); // Clear selected table row and column
        selectedStudent = new Student();
        
        btnAddEdit.setText("Tambah");
        tfSearch.setText("");
        tfName.setText("");
        taAddress.setText("");
        stateEdit = false;
        
        getAndFillStudentTable();
    }
    
    private void stateEdit() {
        stateEdit = true;
        btnAddEdit.setText("Ubah");
    }
    
    private void fillStudentForm(Student student) {
        tfName.setText(student.name);
        taAddress.setText(student.address);
    }
    
    private void getAndFillStudentTable() {
        ArrayList<Student> students = mainFrameViewModel.getStudents();
        
        cleanStudentTableRows();
        for(int i = 0; i < students.size(); i++) {
            insertStudentToTable(students.get(i));
        }
    }
    
    private void insertStudentToTable(Student student) {
        DefaultTableModel tblModel = (DefaultTableModel) tblStudent.getModel();
        String rowData[] = { student.id, student.name, student.address };
        tblModel.addRow(rowData);
    }
    
    private void insertStudentsToTable(ArrayList<Student> students) {
        cleanStudentTableRows();
        for(int i = 0; i < students.size(); i++) {
            insertStudentToTable(students.get(i));
        }   
    }
    
    private void cleanStudentTableRows() {
        DefaultTableModel tblModel = (DefaultTableModel) tblStudent.getModel();        
        tblStudent.clearSelection(); // Clear selected table row and column
        
        while(tblModel.getRowCount() > 0) {
            tblModel.removeRow(0);
        }
    }
    
    private void performSearchStudent() {
        String keyword = tfSearch.getText();
        ArrayList<Student> students = mainFrameViewModel.searchStudents(keyword);
        cleanStudentTableRows();
        insertStudentsToTable(students);
    }
    
    private boolean validateStudentFormError() {
        boolean isError = false;
        
        if(tfName.getText().isEmpty()) {
            isError = true;
            DialogBox.showMessageDialog("Silahkan isi nama !");
        }
        else if(taAddress.getText().isEmpty()) {
            isError = true;
            DialogBox.showMessageDialog("Silahkan isi alamat !");
        }

        return isError;
    }
    
    private void showDatabaseErrorDialog() {
        int response = DialogBox.showOptionDialog(
                            "Error", 
                            "Database Gagal Terhubung !\nIngin Menyambungkannya Kembali ?",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.ERROR_MESSAGE);
            
        if(response == JOptionPane.YES_OPTION) {
            mainFrameViewModel.connectDB();
            runShell();
        } else {
            System.exit(0); // Exit Programs
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JButton btnAddEdit;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblLogedUser;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuItemInfo;
    private javax.swing.JScrollPane scrollPanelStudentTable;
    private javax.swing.JScrollPane scrollPanelTextAreaAddress;
    private javax.swing.JTextArea taAddress;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
